{"remainingRequest":"/Users/hamster/coding/tech-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/hamster/coding/tech-blog/node_modules/vuepress-plugin-demo-block/lib/clientRootMixin.js","dependencies":[{"path":"/Users/hamster/coding/tech-blog/node_modules/vuepress-plugin-demo-block/lib/clientRootMixin.js","mtime":499162500000},{"path":"/Users/hamster/coding/tech-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamster/coding/tech-blog/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}