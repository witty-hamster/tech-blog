{"remainingRequest":"/Users/hamster/coding/tech-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/hamster/coding/tech-blog/node_modules/@vuepress/core/lib/client/util.js","dependencies":[{"path":"/Users/hamster/coding/tech-blog/node_modules/@vuepress/core/lib/client/util.js","mtime":499162500000},{"path":"/Users/hamster/coding/tech-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamster/coding/tech-blog/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5tYXAuanMiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBsYXlvdXRDb21wb25lbnRzIGZyb20gJ0BpbnRlcm5hbC9sYXlvdXQtY29tcG9uZW50cyc7CmltcG9ydCBwYWdlQ29tcG9uZW50cyBmcm9tICdAaW50ZXJuYWwvcGFnZS1jb21wb25lbnRzJzsKCi8qKgogKiBDcmVhdGUgYSBjYWNoZWQgdmVyc2lvbiBvZiBhIHB1cmUgZnVuY3Rpb24uCiAqLwpmdW5jdGlvbiBjYWNoZWQoZm4pIHsKICBjb25zdCBjYWNoZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7CiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXMKICByZXR1cm4gZnVuY3Rpb24gY2FjaGVkRm4oc3RyKSB7CiAgICBjb25zdCBoaXQgPSBjYWNoZVtzdHJdOwogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJldHVybi1hc3NpZ24KICAgIHJldHVybiBoaXQgfHwgKGNhY2hlW3N0cl0gPSBmbihzdHIpKTsKICB9Owp9CgovKioKICogQ2FtZWxpemUgYSBoeXBoZW4tZGVsaW1pdGVkIHN0cmluZy4KICovCmNvbnN0IGNhbWVsaXplUkUgPSAvLShcdykvZzsKY29uc3QgY2FtZWxpemUgPSBjYWNoZWQoc3RyID0+IHsKICByZXR1cm4gc3RyLnJlcGxhY2UoY2FtZWxpemVSRSwgKF8sIGMpID0+IGMgPyBjLnRvVXBwZXJDYXNlKCkgOiAnJyk7Cn0pOwoKLyoqCiAqIEh5cGhlbmF0ZSBhIGNhbWVsQ2FzZSBzdHJpbmcuCiAqLwpjb25zdCBoeXBoZW5hdGVSRSA9IC9cQihbQS1aXSkvZzsKY29uc3QgaHlwaGVuYXRlID0gY2FjaGVkKHN0ciA9PiB7CiAgcmV0dXJuIHN0ci5yZXBsYWNlKGh5cGhlbmF0ZVJFLCAnLSQxJykudG9Mb3dlckNhc2UoKTsKfSk7CgovKioKICogQ2FwaXRhbGl6ZSBhIHN0cmluZy4KICovCmNvbnN0IGNhcGl0YWxpemUgPSBjYWNoZWQoc3RyID0+IHsKICByZXR1cm4gc3RyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyLnNsaWNlKDEpOwp9KTsKCi8qKgogKiBUaGlzIG1ldGhvZCB3YXMgZm9yIHNlY3VyZWx5IGdldHRpbmcgVnVlIGNvbXBvbmVudCB3aGVuIGNvbXBvbmVudHMKICogYXJlIG5hbWVkIGluIGRpZmZlcmVudCBzdHlsZS4KICoKICogZS5nLiBhIGNvbXBvbmVudCBuYW1lZCBgYS1iYCBjYW4gYmUgYWxzbyBnZXR0ZWQgYnkgYEFCYCwgSXQncyB0aGUKICogc2FtZSB0aGUgb3RoZXIgd2F5IHJvdW5kCiAqCiAqIEBwYXJhbSB7ZnVuY3Rpb259IGdldHRlciBhIGZ1bmN0aW9uIG9mIGdldHRpbmcgY29tcG9uZW50IGJ5IG5hbWUKICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgY29tcG9uZW50J3MgbmFtZQogKiBAcmV0dXJucyB7Q29tcG9uZW50fEFzeW5jQ29tcG9uZW50fQogKi8KZXhwb3J0IGZ1bmN0aW9uIGdldENvbXBvbmVudChnZXR0ZXIsIG5hbWUpIHsKICBpZiAoIW5hbWUpIHJldHVybjsKICBpZiAoZ2V0dGVyKG5hbWUpKSByZXR1cm4gZ2V0dGVyKG5hbWUpOwogIGNvbnN0IGlzS2ViYWJDYXNlID0gbmFtZS5pbmNsdWRlcygnLScpOwogIGlmIChpc0tlYmFiQ2FzZSkgcmV0dXJuIGdldHRlcihjYXBpdGFsaXplKGNhbWVsaXplKG5hbWUpKSk7CiAgcmV0dXJuIGdldHRlcihjYXBpdGFsaXplKG5hbWUpKSB8fCBnZXR0ZXIoaHlwaGVuYXRlKG5hbWUpKTsKfQpjb25zdCBhc3luY0NvbXBvbmVudHMgPSBPYmplY3QuYXNzaWduKHt9LCBsYXlvdXRDb21wb25lbnRzLCBwYWdlQ29tcG9uZW50cyk7CmNvbnN0IGFzeW5jQ29tcG9uZW50c0dldHRlciA9IG5hbWUgPT4gYXN5bmNDb21wb25lbnRzW25hbWVdOwpjb25zdCBwYWdlQ29tcG9uZW50c0dldHRlciA9IGxheW91dCA9PiBwYWdlQ29tcG9uZW50c1tsYXlvdXRdOwpjb25zdCBsYXlvdXRDb21wb25lbnRzR2V0dGVyID0gbGF5b3V0ID0+IGxheW91dENvbXBvbmVudHNbbGF5b3V0XTsKY29uc3QgZ2xvYmFsQ29tcG9uZW50c0dldHRlciA9IG5hbWUgPT4gVnVlLmNvbXBvbmVudChuYW1lKTsKZXhwb3J0IGZ1bmN0aW9uIGdldFBhZ2VBc3luY0NvbXBvbmVudChwYWdlS2V5KSB7CiAgcmV0dXJuIGdldENvbXBvbmVudChwYWdlQ29tcG9uZW50c0dldHRlciwgcGFnZUtleSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGdldExheW91dEFzeW5jQ29tcG9uZW50KGxheW91dCkgewogIHJldHVybiBnZXRDb21wb25lbnQobGF5b3V0Q29tcG9uZW50c0dldHRlciwgbGF5b3V0KTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0QXN5bmNDb21wb25lbnQobmFtZSkgewogIHJldHVybiBnZXRDb21wb25lbnQoYXN5bmNDb21wb25lbnRzR2V0dGVyLCBuYW1lKTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0VnVlQ29tcG9uZW50KG5hbWUpIHsKICByZXR1cm4gZ2V0Q29tcG9uZW50KGdsb2JhbENvbXBvbmVudHNHZXR0ZXIsIG5hbWUpOwp9CmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVBc3luY0NvbXBvbmVudHNMb2FkZWQoLi4ubmFtZXMpIHsKICByZXR1cm4gUHJvbWlzZS5hbGwobmFtZXMuZmlsdGVyKHYgPT4gdikubWFwKGFzeW5jIG5hbWUgPT4gewogICAgaWYgKCFnZXRWdWVDb21wb25lbnQobmFtZSkgJiYgZ2V0QXN5bmNDb21wb25lbnQobmFtZSkpIHsKICAgICAgY29uc3QgY29tcCA9IGF3YWl0IGdldEFzeW5jQ29tcG9uZW50KG5hbWUpKCk7CiAgICAgIFZ1ZS5jb21wb25lbnQobmFtZSwgY29tcC5kZWZhdWx0KTsKICAgIH0KICB9KSk7Cn0KCi8qKgogKiBJbmplY3Qgb3B0aW9uIHRvIFZ1ZSBTRkMKICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnMKICogQHBhcmFtIHtzdHJpbmd9IGtleQogKiBAcGFyYW0ge2FueX0gdmFsdWUKICovCmV4cG9ydCBmdW5jdGlvbiBpbmplY3RDb21wb25lbnRPcHRpb24ob3B0aW9ucywga2V5LCB2YWx1ZSkgewogIGNvbnN0IGFycmF5SW5qZWN0ID0gKCkgPT4gewogICAgaWYgKCFvcHRpb25zW2tleV0pIG9wdGlvbnNba2V5XSA9IFtdOwogICAgb3B0aW9uc1trZXldLnB1c2goLi4udmFsdWUpOwogIH07CiAgY29uc3Qgb2JqZWN0SW5qZWN0ID0gKCkgPT4gewogICAgaWYgKCFvcHRpb25zW2tleV0pIG9wdGlvbnNba2V5XSA9IHt9OwogICAgT2JqZWN0LmFzc2lnbihvcHRpb25zW2tleV0sIHZhbHVlKTsKICB9OwogIC8vIGNvbnN0IHByaW1pdGl2ZUluamVjdCA9ICgpID0+IG9wdGlvbnNba2V5XSA9IHZhbHVlCgogIHN3aXRjaCAoa2V5KSB7CiAgICBjYXNlICdjb21wb25lbnRzJzoKICAgICAgb2JqZWN0SW5qZWN0KCk7CiAgICAgIGJyZWFrOwogICAgY2FzZSAnbWl4aW5zJzoKICAgICAgYXJyYXlJbmplY3QoKTsKICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OgogICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gb3B0aW9uIG5hbWUuJyk7CiAgfQp9CmV4cG9ydCBmdW5jdGlvbiBmaW5kUGFnZUZvclBhdGgocGFnZXMsIHBhdGgpIHsKICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZ2VzLmxlbmd0aDsgaSsrKSB7CiAgICBjb25zdCBwYWdlID0gcGFnZXNbaV07CiAgICBpZiAocGFnZS5wYXRoID09PSBwYXRoKSB7CiAgICAgIHJldHVybiBwYWdlOwogICAgfQogIH0KICByZXR1cm4gewogICAgcGF0aDogJycsCiAgICBmcm9udG1hdHRlcjoge30KICB9Owp9CmV4cG9ydCBmdW5jdGlvbiBmaW5kUGFnZUJ5S2V5KHBhZ2VzLCBrZXkpIHsKICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZ2VzLmxlbmd0aDsgaSsrKSB7CiAgICBjb25zdCBwYWdlID0gcGFnZXNbaV07CiAgICBpZiAocGFnZS5rZXkgPT09IGtleSkgewogICAgICByZXR1cm4gcGFnZTsKICAgIH0KICB9CiAgcmV0dXJuIHsKICAgIHBhdGg6ICcnLAogICAgZnJvbnRtYXR0ZXI6IHt9CiAgfTsKfQoKLyoqCiAqIE5vcm1hbGl6ZSBjb25maWcuCiAqIFRoaXMgdXRpbGl0eSBpcyBtYWlubHkgZm9yIHBsdWdpbiBkZXZlbG9wZXJzLiBGb3Igc29tZQogKiBwbHVnaW5zIHRoYXQgbmVlZCBpbnRlcm5hdGlvbmFsaXplIHRoZSB0ZXh0LiBidXQgaXQncwogKiBub3QgcmVjb21tZW5iZGVkIHRvIGxldCBwbHVnaW4gY2FyZSBhYm91dCB0byB0aGUgaW50ZXJuYWwKICogaTE4biBpbXBsZW1lbnRhdGlvbiwgc28gdGhpcyB1dGlsaXR5IHdhcyBib3JuLgogKgogKgogKiBVc2FnZToKICoKICogaW1wb3J0IHsgbm9ybWFsaXplQ29uZmlnIH0gZnJvbSAnQGFwcC91dGlsJwogKiBleHBvcnQgZGVmYXVsdCB7CiAqICAgZGF0YSAoKSB7CiAqICAgICByZXR1cm4geyBjb25maWcgfQogKiAgIH0KICogICBjb21wdXRlZDogewogKiAgICAgbm9ybWFsaXplZENvbmZpZygpIHsKICogICAgICAgcmV0dXJuIG5vcm1hbGl6ZUNvbmZpZyh0aGlzLCBjb25maWcpCiAqICAgICB9CiAqICAgfQogKiB9CiAqCiAqCiAqIGUuZy4KICoKICogQ29uZmlnOiA6ICdUZXh0JwogKiBOb3JtYWxpemVkIENvbmZpZzogJ1RleHQnCiAqCiAqIENvbmZpZzogOiB7ICcvJzogJ1RleHQnLCAnL3poLyc6ICfmlofmnKwnIH0KICogTm9ybWFsaXplZCBDb25maWc6ICdUZXh0JyBvciAn5paH5pysJwogKgogKiBAcGFyYW0ge1Z1ZX0gY29tcG9uZW50CiAqIEBwYXJhbSB7YW55fSByYXdDb25maWcKICogQHJldHVybnMge2FueX0KICovCmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVDb25maWcoY29tcG9uZW50LCByYXdDb25maWcpIHsKICBjb25zdCB7CiAgICAkbG9jYWxlUGF0aAogIH0gPSBjb21wb25lbnQ7CiAgaWYgKHR5cGVvZiByYXdDb25maWcgPT09ICdvYmplY3QnICYmIHJhd0NvbmZpZ1skbG9jYWxlUGF0aF0pIHsKICAgIHJldHVybiByYXdDb25maWdbJGxvY2FsZVBhdGhdOwogIH0KICByZXR1cm4gcmF3Q29uZmlnOwp9CgovKioKICogU2V0IGdsb2JhbCBpbmZvIGluIGB3aW5kb3cuX19WVUVQUkVTU19fYCBmb3IgZGVidWdnaW5nLgogKgogKiBAcGFyYW0ge3N0cmluZ31rZXkKICogQHBhcmFtIHthbnl9IHZhbHVlCiAqLwpleHBvcnQgZnVuY3Rpb24gc2V0R2xvYmFsSW5mbyhrZXksIHZhbHVlKSB7CiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnIHx8ICF3aW5kb3cuX19WVUVQUkVTU19fKSB7CiAgICByZXR1cm47CiAgfQogIHdpbmRvdy5fX1ZVRVBSRVNTX19ba2V5XSA9IHZhbHVlOwp9"},null]}